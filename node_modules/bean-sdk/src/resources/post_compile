#!/usr/bin/env python

"""
Mac OS X

tools.beanupload.upload.pattern="{cmd.path}/post_compile" "-board={build.mcu}" "-tools={cmd.path}" "-path={build.path}" "-file={build.project_name}" "-bean_variant={build.bean_variant}"

Example:
-board=atmega328p
-tools=/Applications/Arduino.app/Contents/Java/hardware/tools/bean
-path=/var/folders/34/886kwtkx31g2zgglpg8th7400000gn/T/buildf38d4be60096b3615388b79e01a0e4e5.tmp
-file=sleep.ino
-bean_variant=2
"""

"""
Windows

tools.beanupload.program.pattern="python" "{cmd.path}/post_compile" "-board={build.mcu}" "-tools={cmd.path}" "-path={build.path}" "-file={build.project_name}" "-bean_variant={build.bean_variant}"

Example:
...


Issue:

python ~/projects/bean-sdk-node-private/src/resources/post_compile -board=atmega328p -tools=/Applications/Arduino.app/Contents/Java/hardware/tools/bean -path=/var/folders/34/886kwtkx31g2zgglpg8th7400000gn/T/buildf38d4be60096b3615388b79e01a0e4e5.tmp -file=sleep.ino -bean_variant=2

"""

import os
import sys
import shutil

VARIANT_BEAN = "1"
VARIANT_BEANPLUS = "2"

SKETCH_LOCATION = os.path.join(os.path.expanduser("~"), '.beansketches')
SKETCH_LOCATION_BEAN = os.path.join(SKETCH_LOCATION, 'bean')
SKETCH_LOCATION_BEANPLUS = os.path.join(SKETCH_LOCATION, 'beanplus')
DEBUG_LOG = os.path.abspath(os.path.join(os.path.expanduser('~'), 'post_compile.log'))

SILENT = True


def debug(msg, mode='ab'):
    if SILENT:
        return

    msg = "{}\n".format(msg)
    if sys.version_info >= (3, 0):
        bytes_msg = msg.encode('utf8') # cast to bytes
    else:
        bytes_msg = msg  # already bytes

    with open(DEBUG_LOG, mode) as f:
        f.write(bytes_msg)


def parse_input(sys_args):
    args = {}
    for a in sys_args[1:]:
        debug(str(a))
        arg_name, arg_value = a.split('=', 1)  # split on first occurance of "="
        arg_name = arg_name.split('-')[-1]
        args[arg_name] = arg_value
    return args


def copy_hex(args):
    debug(str(args))
    sketch_name, extension = os.path.splitext(args['file'])
    tmp_compiled_path = os.path.join(args['path'], "{}.hex".format(args['file']))

    if not os.path.exists(SKETCH_LOCATION_BEAN):
        os.makedirs(SKETCH_LOCATION_BEAN)

    if not os.path.exists(SKETCH_LOCATION_BEANPLUS):
        os.makedirs(SKETCH_LOCATION_BEANPLUS)

    if (args['bean_variant'] == VARIANT_BEAN):
        perm_compiled_path = os.path.join(SKETCH_LOCATION_BEAN, "{}.hex".format(sketch_name))
    elif (args['bean_variant'] == VARIANT_BEANPLUS):
        perm_compiled_path = os.path.join(SKETCH_LOCATION_BEANPLUS, "{}.hex".format(sketch_name))
    else:
        print("ERROR: Unknown variant {}".format(args['bean_variant']))
        sys.exit(1)

    shutil.copyfile(tmp_compiled_path, perm_compiled_path)


debug('post compile started', mode='wb')
parsed_args = parse_input(sys.argv)
copy_hex(parsed_args)
debug('done!')
