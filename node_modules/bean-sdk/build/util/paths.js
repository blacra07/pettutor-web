'use strict';

var path = require('path');
var fs = require('fs');

var RESOURCE_DIR = path.join(__dirname, '..', 'resources');

function getResource(name) {
  // Get a resource given a name (filename or folder), must exactly match

  var resolved = path.join(RESOURCE_DIR, name);
  fs.accessSync(resolved, fs.F_OK, function (err) {
    if (err) {
      throw new Error('No resource: ' + resolved);
    }
  });
  return resolved;
}

function getResourceGlob(glob) {
  // Get a resource given a glob, doesn't need to exactly match

  var files = fs.readdirSync(RESOURCE_DIR);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var f = _step.value;

      if (f.indexOf(glob) > -1) {
        return path.join(RESOURCE_DIR, f);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  throw new Error('No resource contains glob: ' + glob);
}

module.exports = {
  getResource: getResource,
  getResourceGlob: getResourceGlob
};