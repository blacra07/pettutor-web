'use strict';

var buffer = require('buffer');
var crc = require('crc');
var readline = require('readline');

var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function normalizeUUID(uuid) {
  // Noble stores UUIDs as lower case strings with no dashes
  // Note: the replace call isn't working...don't use dashes
  return uuid.replace('-', '').toLowerCase();
}

function concatBuffers(buffers) {
  var length = 0;
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = buffers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var b = _step.value;

      length += b.length;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  var buf = buffer.Buffer.concat(buffers, length);
  return buf;
}

function crc16(buf) {
  return crc.crc16ccitt(buf);
}

module.exports = {
  normalizeUUID: normalizeUUID,
  concatBuffers: concatBuffers,
  crc16: crc16,
  userInput: rl
};