'use strict';

var common = require('./common');

var SCAN_DURATION = 30;

function startScan(sdk, all, completedCallback) {

  var filter = true;
  var msg = 'LightBlue';
  if (all) {
    filter = false;
    msg = 'ALL';
  }

  console.log('\nScanning for ' + msg + ' devices for ' + SCAN_DURATION + ' seconds...\n');

  sdk.on('discover', function (scannedDevice) {
    console.log('New Device discovered or updated!\n' + scannedDevice.print());
  });

  sdk.startScanning(SCAN_DURATION, filter, completedCallback);
}

function listGATT(sdk, beanName, beanAddress, completedCallback) {

  common.connectToDevice(sdk, beanName, beanAddress, function (device) {
    var services = device.getServices();
    for (var sUUID in services) {
      var s = services[sUUID];

      console.log('Service: ' + sUUID);
      console.log('  Name: ' + s.getName());
      console.log('  Characteristics:');

      var characteristics = s.getCharacteristics();
      if (characteristics.length < 1) {
        console.log('    None.');
      } else {
        for (var cUUID in characteristics) {
          console.log('    ' + cUUID);
        }
      }
    }
    completedCallback(null);
  }, completedCallback, false);
}

module.exports = {
  startScan: startScan,
  listGATT: listGATT
};